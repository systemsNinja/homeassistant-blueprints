blueprint:
  name: AWTRIX App Manager (Dynamic Discovery)
  description: >
    Dynamically discovers and manages custom AWTRIX apps. 
    It listens to the custom app topics, populates a dropdown, and provides a way to delete the selected app.

    **SETUP REQUIRED:**
    1. You MUST create an `input_select` (Dropdown) helper to display the apps (e.g., name it "AWTRIX App to Delete").

  domain: automation
  input:
    awtrix_topic:
      name: AWTRIX Base Topic
      description: "Enter the base MQTT topic of your AWTRIX device (e.g., Minibyt)."
      selector:
        text:
    app_selector:
      name: App Dropdown Helper
      description: "Select the `input_select` helper you created for the dropdown."
      selector:
        entity:
          domain: input_select

trigger:
  # Trigger 1: Listen for any app publishing data to discover it.
  - platform: mqtt
    topic: !input awtrix_topic
    topic: "{{ awtrix_topic ~ '/custom/#' }}"
  # Trigger 2: Listen for the custom event to delete an app.
  - platform: event
    event_type: awtrix_delete_app
    event_data:
      entity_id: !input app_selector

action:
  - choose:
      # Case 1: An app was discovered via MQTT. Update the dropdown list.
      - conditions:
          - "{{ trigger.platform == 'mqtt' }}"
        sequence:
          - service: input_select.set_options
            target:
              entity_id: !input app_selector
            data:
              # Logic to add the newly discovered app to the existing list.
              # 1. Get the app name from the topic (e.g., 'Minibyt/custom/weather' -> 'weather').
              # 2. Get the current list of options from the dropdown.
              # 3. Combine them into a new list and filter for unique values.
              options: >-
                {% set new_app = trigger.topic.split('/')[-1] %}
                {% set existing_apps = state_attr(app_selector, 'options') | list %}
                {{ (existing_apps + [new_app]) | unique | sort }}

      # Case 2: The delete event was fired. Delete the selected app.
      - conditions:
          - "{{ trigger.platform == 'event' }}"
        sequence:
          - service: mqtt.publish
            data:
              # Dynamically build the topic for the app selected in the dropdown.
              topic: "{{ awtrix_topic }}/custom/{{ states(app_selector) }}"
              # An empty payload tells AWTRIX to delete the app.
              payload: "{}"
mode: single
